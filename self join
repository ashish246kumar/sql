SELECT s1.Name 
FROM Students s1
JOIN Friends f ON s1.ID = f.ID
JOIN Packages p1 ON s1.ID = p1.ID
JOIN Packages p2 ON f.Friend_ID = p2.ID
WHERE p2.Salary > p1.Salary
ORDER BY p2.Salary;
*******
3.1: Join Students s1 with Friends f
The first join is between Students s1 and Friends f on the condition s1.ID = f.ID. This matches each student with their friend.

Intermediate Result (s1 JOIN f):

s1.ID	s1.Name	f.ID	f.Friend_ID
1	Alice	1	2
2	Bob	2	3
3	Charlie	3	1
4	David	4	3
***
Step 3.2: Join with Packages p1
The next join is between the result above and Packages p1 on the condition s1.ID = p1.ID. This adds the student’s salary (p1.Salary) to the result.

Intermediate Result (s1 JOIN f JOIN p1):

s1.ID	s1.Name	f.ID	f.Friend_ID	p1.ID	p1.Salary
1	Alice	1	2	1	15.0
2	Bob	2	3	2	10.0
3	Charlie	3	1	3	20.0
4	David	4	3	4	12.0
**********
ep 3.3: Join with Packages p2
The next join is with Packages p2 on the condition f.Friend_ID = p2.ID. This adds the friend’s salary (p2.Salary) to the result.

Intermediate Result (s1 JOIN f JOIN p1 JOIN p2):

s1.ID	s1.Name	f.ID	f.Friend_ID	p1.ID	p1.Salary	p2.ID	p2.Salary
1	Alice	1	2	1	15.0	2	10.0
2	Bob	2	3	2	10.0	3	20.0
3	Charlie	3	1	3	20.0	1	15.0
4	David	4	3	4	12.0	3	20.0
*********
tep 3.4: Apply the WHERE Clause (p2.Salary > p1.Salary)
The WHERE clause filters the rows where the friend’s salary (p2.Salary) is greater than the student’s salary (p1.Salary).

Let’s evaluate the condition p2.Salary > p1.Salary for each row:

s1.ID	s1.Name	p1.Salary	p2.Salary	p2.Salary > p1.Salary?
1	Alice	15.0	10.0	No
2	Bob	10.0	20.0	Yes
3	Charlie	20.0	15.0	No
4	David	12.0	20.0	Yes
*****************************************
