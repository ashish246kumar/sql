You are given a table, Projects, containing three columns: Task_ID, Start_Date and End_Date. It is guaranteed that the difference between the End_Date and the Start_Date is equal to 1 day for each row in the table.



If the End_Date of the tasks are consecutive, then they are part of the same project. Samantha is interested in finding the total number of different projects completed.

Write a query to output the start and end dates of projects listed by the number of days it took to complete the project in ascending order. If there is more than one project that have the same number of completion days, then order by the start date of the project.

Sample Input



Sample Output

2015-10-28 2015-10-29
2015-10-30 2015-10-31
2015-10-13 2015-10-15
2015-10-01 2015-10-04

*******************************
WITH CTE AS (
    SELECT *,
           Start_Date - INTERVAL ROW_NUMBER() OVER(ORDER BY Start_Date) DAY AS grp
    FROM Projects
)
SELECT MIN(Start_Date), MAX(End_Date)
FROM CTE
GROUP BY grp
ORDER BY DATEDIFF(MAX(End_Date), MIN(Start_Date)), MIN(Start_Date);
**********************
"Write a SQL query to generate all possible matchups between teams from the TEAMS table. Each team should be paired with every other team exactly once, and a team should not be matched with itself."


WITH CTE AS (
    SELECT 
        Team_Name, 
        ROW_NUMBER() OVER(ORDER BY Team_Name) AS RN
    FROM TEAMS
)
SELECT 
    T1.Team_Name AS TEAM, 
    T2.Team_Name AS OPPONENT_TEAM 
FROM CTE T1
INNER JOIN CTE T2
ON T1.RN < T2.RN;
*********************************************
Write an SQL query to assign ranks to students within each department (dept) based on their marks in descending order. Use both RANK() and DENSE_RANK() window functions to compare their behavior
*************************************************************
WITH CTE AS (
    SELECT *, 
           RANK() OVER (PARTITION BY dept ORDER BY marks DESC) AS fifth_column,
           DENSE_RANK() OVER (PARTITION BY dept ORDER BY marks DESC) AS sixth_column
    FROM Students
)
SELECT * FROM CTE;
***********

********************
